import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

TOKEN = os.environ.get("BOT_TOKEN")
CHANNEL_USERNAME = "@bettinghumor"  # üëà —Ç–≤–æ–π –∫–∞–Ω–∞–ª

def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("üîì –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç", callback_data="check")]
    ]
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É:", reply_markup=InlineKeyboardMarkup(keyboard))

def check_subscription(update: Update, context: CallbackContext):
    user_id = update.callback_query.from_user.id
    chat_id = update.effective_chat.id

    try:
        member = context.bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        if member.status in ["member", "administrator", "creator"]:
            context.bot.send_message(chat_id=chat_id, text="‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –í–æ—Ç —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:\n\nüëâ [–°–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª–∫–∞]", parse_mode="HTML")
        else:
            raise Exception("Not subscribed")
    except Exception as e:
        context.bot.send_message(
            chat_id=chat_id,
            text="‚ùó –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É", url="https://t.me/bettinghumor")]
            ])
        )

def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(check_subscription, pattern="check"))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
